<button class="btn btn-default btn-large" id="work">Work!</button><button class="btn btn-default btn-upgrade"><i class="glyphicon glyphicon-plus"></i></button>
  <button class="btn btn-default btn-large" id="toy">Toy!</button><button class="btn btn-default btn-upgrade"><i class="glyphicon glyphicon-plus"></i></button>
  <button class="btn btn-default btn-large" id="treat">Treat!</button><button class="btn btn-default btn-upgrade"><i class="glyphicon glyphicon-plus"></i></button>
  <button class="btn btn-default btn-large" id="cuddle">Cuddle!</button><button class="btn btn-default btn-upgrade"><i class="glyphicon glyphicon-plus"></i></button>
  <button class="btn btn-default btn-large" id="milk">Milk!</button><button class="btn btn-default btn-upgrade"><i class="glyphicon glyphicon-plus"></i></button>
  <button class="btn btn-default btn-large" id="cafe" disabled>Cat Cafe!</button><button class="btn btn-default btn-upgrade" disabled><i class="glyphicon glyphicon-plus"></i></button>

  <span class="gold"><p class="stat-label label-gold"><img src="/images/gold.png" class="img-small"> Gold</p></span><span class="gold-count"><p class="stat-mood">{{gold}}</p></span>


  
.stats-OLD {
	display: block;
	text-align: left;
	border-radius: 40px;
	color: #333;
    background-color: #fff;
    border-color: #ccc;
    padding: 6px 12px;
    margin-top: -10px;
    margin-left: 30px;
    margin-right: 30px;
}

.stat-OLD {
	display: block;
	margin-bottom: 5px;
}


<!--script type="text/javascript" src="/public/javascripts/validator.min.js"></script>-->
<script type="text/javascript" src="//cdjns.cloudflare.com/ajax/libs/validate.js/0.9.0/validate.min.js"></script>
<script type="text/javascript">
  function validate() {
    var username = document.getElementById("username");
    var cat_name = document.getElementById("cat");
    if(!validator.isAlphanumeric(username.value) && !validator.isAlpha(cat_name.value)) {
      username.className = "btn-go-line red";
      cat_name.className = "btn-go-line red";
      return false;
      console.log("Bad cat and usernames.");
    } else if(!validator.isAlphanumeric(username.value)) {
      username.className = "btn-go-line red";
      return false;
      console.log("Bad username.");
    } else if(!validator.isAlpha(cat_name)) {
      cat_name.className = "btn-go-line red";
      return false;
      console.log("Bad cat name.");
    } else {
      return true;
    }
  }
</script>

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js" type="text/javascript"></script>
<script src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.12.0/jquery.validate.min.js" type="text/javascript"></script>
<script type="text/javascript">
  $(document).ready(function() {
    $('#create-form').validate(
      {
        rules:
        {
          username:
          {
            required: true,
            alphanumeric: true
          },
          cat_name:
          {
            required: true,
            alpha: true
          }
        },
        messages:
        {
          username:
          {
            required: "Please enter a valid username."
          },
          cat_name:
          {
            required: "Please enter a valid cat name."
          }
        }
      });
  })


  // var sqlite3 = require('sqlite3').verbose();
// var db = new sqlite3.Database('virtualcat.db');
 
// db.serialize(function() {
//   db.get("SELECT name FROM sqlite_master WHERE type=table AND name=users", function(err, rows) {
//     if(err !== null) { console.log(err); }
//     else if(rows === undefined) {
//       db.run('CREATE TABLE if not exists users (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(20), cat_id INTEGER REFERENCES cats(id))', function (err) { 
//         if (err !== null) console.log(err) else console.log("SQL Table users initialized.") });
//     } else { console.log("SQL Table users already initialized."); }
//   });
 
//   db.get("SELECT name FROM sqlite_master WHERE type=table AND name=cats", function(err, rows) {
//     if(err !== null) { console.log(err); }
//     else if(rows === undefined) {
//      db.run('CREATE TABLE if not exists cats (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(20), mood VARCHAR(50), hunger INTEGER, thirst INTEGER, accessory_id INTEGER, user_id, FOREIGN_KEY(accessory_id) REFERNCES accessory(id), FOREIGN_KEY(user_id) REFERENCES users(id))', function (err) { 
//         if (err !== null) console.log(err) else console.log("SQL Table cats initialized.") });
//     } else { console.log("SQL Table cats already initialized."); }
//   });

//   db.get("SELECT name FROM sqlite_master WHERE type=table AND name=accessories", function(err, rows) {
//     if(err !== null) { console.log(err); }
//     else if(rows === undefined) {
//       db.run('CREATE TABLE if not exists accessories (id INTEGER PRIMARY KEY AUTOINCREMENT, item VARCHAR(30), image VARCHAR(255))', function (err) { 
//         if (err !== null) console.log(err) else console.log("SQL Table cats initialized.") });
//     } else { console.log("SQL Table accessories already initialized."); }
//   });

//   var stmt = db.prepare("INSERT INTO user VALUES (?)");
//   for (var i = 0; i < 10; i++) {
//       stmt.run("Ipsum " + i);
//   }
//   stmt.finalize();
 
//   db.each("SELECT rowid AS id, info FROM lorem", function(err, row) {
//       console.log(row.id + ": " + row.info);
//   });
// });
 
// db.close();



